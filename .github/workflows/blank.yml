name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  check-docs-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check for changes outside of docs
      id: check
      run: |
        # Check if there are changes outside the 'docs' folder
        git fetch origin main
        changes=$(git diff --name-only origin/main...HEAD | grep -v '^docs/')
        if [ -n "$changes" ]; then
          echo "Changes detected outside 'docs' folder."
          echo "::set-output name=changed::true"
        else
          echo "No changes detected outside 'docs' folder."
          echo "::set-output name=changed::false"
        fi

  build:
    runs-on: ubuntu-latest
    needs: check-docs-changes
    if: needs.check-docs-changes.outputs.changed == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install

    - name: Run unit tests
      run: mvn test

    - name: Verify code coverage
      run: mvn jacoco:report

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && needs.check-docs-changes.outputs.changed == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Deploy to Staging Environment
      run: |
        # Script to deploy application to staging server
        echo "Deploying to staging environment..."

    - name: Run Database Migrations (MySQL)
      run: |
        # Run Liquibase or Flyway migrations
        mvn liquibase:update

    - name: Deploy to Production Environment
      if: github.ref == 'refs/heads/main'
      run: |
        # Script to deploy application to production server
        echo "Deploying to production environment..."

    - name: Run Database Migrations (Production - MySQL)
      if: github.ref == 'refs/heads/main'
      run: |
        mvn liquibase:update

    - name: Run Tests on Production Environment
      if: github.ref == 'refs/heads/main'
      run: |
        # Execute smoke tests or end-to-end tests
        echo "Running smoke tests on production..."

  test_mongodb:
    runs-on: ubuntu-latest
    needs: check-docs-changes
    if: needs.check-docs-changes.outputs.changed == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up MongoDB
      uses: supercharge/mongodb-github-action@1.6.0
      with:
        mongodb-version: '5.0'

    - name: Run NoSQL tests
      run: |
        # Execute NoSQL-specific tests
        mvn test -Dtest=MongoDBIntegrationTest
